<Window x:Class="Festispec_WPF.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Festispec_WPF"
        xmlns:validationrules="clr-namespace:Festispec_WPF.Validation_rules"
        mc:Ignorable="d"
        WindowState="Maximized"
        WindowStyle="None"
        DataContext="{Binding GetLoginRegisterVm, Source={StaticResource Locator}}"
        Title="FestiSpec IT4J">

    <StackPanel>
        <Image Source="/Images/festispec.PNG" Width="500"/>

        <Border Padding="100 10">
            <StackPanel Background="Gray" VerticalAlignment="Center" MaxWidth="800">
                <StackPanel Margin="20">
                    <!-- Login fields-->
                    <TextBlock Text="Username" Padding="0 5"/>
                    <TextBox Padding="0 5" Name="username" LostFocus="Username_LostFocus">
                        <TextBox.Text>
                            <Binding Path="Username">
                                <Binding.ValidationRules>
                                    <validationrules:EmptyValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=username}" Foreground="Red"/>

                    <TextBlock Text="Password" Padding="0 5"/>
                    <TextBox Padding="0 5" Name="password" LostFocus="Password_LostFocus">
                        <TextBox.Text>
                            <Binding Path="Password">
                                <Binding.ValidationRules>
                                    <validationrules:EmptyValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=password}" Foreground="Red"/>

                    <Label Content="{Binding ErrorText}" HorizontalAlignment="Center" Foreground="Red" FontWeight="Bold"/>

                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type Label}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="12" />
                                <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard>
                                            <Storyboard >
                                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="00:00:00.5">
                                                    <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0,0,0,10" />
                                                    <SplineThicknessKeyFrame KeyTime="00:00:00.1" Value="25,0,0,10" />
                                                    <SplineThicknessKeyFrame KeyTime="00:00:00.2" Value="-25,0,0,10" />
                                                    <SplineThicknessKeyFrame KeyTime="00:00:00.3" Value="0,0,0,10" />
                                                </ThicknessAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Resources>
                        <Label Visibility="{Binding ErrorVisibility}" Content="U heeft geen internet" Margin="0,0,0,10" Foreground="Red" FontWeight="Bold" FontSize="16" HorizontalAlignment="Center" BorderBrush="Red" BorderThickness="2"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button Content="Login" Width="150" Margin="0,0,50,0" Cursor="Hand" Background="#8000FF" FontSize="20" Foreground="White" Height="35" Command="{Binding LoginCommand}" Click="Button_Click">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="Green"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.8" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Content="Offline" Width="150" Cursor="Hand" Margin="0,0,50,0" Background="#8000FF" FontSize="20" Foreground="White" Height="35" Command="{Binding OfflineCommand}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="Green"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.8" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Content="Afsluiten" Width="150" Cursor="Hand" Background="#8000FF" FontSize="20" Foreground="White" Height="35" Command="{Binding ExitCommand}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="Green"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.8" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </Border>
    </StackPanel>
</Window>
